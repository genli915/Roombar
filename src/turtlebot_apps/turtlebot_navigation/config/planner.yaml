controller_frequency: 5.0
recovery_behaviour_enabled: false

NavfnROS:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.

TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5
  acc_lim_theta:  3.2

  max_vel_x: 1.0
  min_vel_x: 0.0

  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.2

  holonomic_robot: false
  escape_vel: -0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 2.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1

DWAPlannerROS:
# Start turtlebot params
  #Robot Configuration Parameters
    odom_topic: /odom_pose

    max_vel_x: 0.1
    min_vel_x: -0.1

    max_vel_y: 0.0
    min_vel_y: 0.0

  # The velocity when robot is moving in a straight line
    max_vel_trans:  0.1
    min_vel_trans:  0

    max_vel_theta: 2.75
    min_vel_theta: 1.37

    acc_lim_x: 2.5
    acc_lim_y: 0.0
    acc_lim_theta: 3.2

  # Goal Tolerance Parametes
    xy_goal_tolerance: 0.15
    yaw_goal_tolerance: 0.2
    latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
    sim_time: 1.5
    vx_samples: 20
    vy_samples: 0
    vth_samples: 40
    controller_frequency: 10.0

  # Trajectory Scoring Parameters
    path_distance_bias: 40.0
    goal_distance_bias: 20.0
    occdist_scale: 0.01
    forward_point_distance: 0.325
    stop_time_buffer: 0.2
    scaling_speed: 0.25
    max_scaling_factor: 0.2

  # Oscillation Prevention Parameters
    oscillation_reset_dist: 0.05

  # Debugging
    publish_traj_pc : true
    publish_cost_grid_pc: true
# End turtlebot params
  # Robot configuration parameters
  # acc_lim_x: 1
  # acc_lim_y: 0
  # acc_lim_th: 0.5
  #
  # max_vel_x: 0.2
  # min_vel_x: -0.1
  # max_vel_y: 0
  # min_vel_y: 0
  #
  # max_trans_vel: 0.2
  # min_trans_vel: 0
  # max_rot_vel: 3
  # min_rot_vel: -3
  #
  # # Goal Tolerance Parameters
  # yaw_goal_tolerance: 0.2
  # xy_goal_tolerance: 0.2
  # latch_xy_goal_tolerance: false

  # # Forward Simulation Parameters
  # sim_time: 2.0
  # sim_granularity: 0.02
  # vx_samples: 6
  # vy_samples: 0
  # vtheta_samples: 20
  # penalize_negative_x: true

  # # Trajectory scoring parameters
  # path_distance_bias: 50 # The weighting for how much the controller should stay close to the path it was given
  # goal_distance_bias: 30 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  # occdist_scale: 0.01 # The weighting for how much the controller should attempt to avoid obstacles
  # forward_point_distance: 3 # The distance from the center point of the robot to place an additional scoring point, in meters
  # stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  # scaling_speed: 0.25 # The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
  # max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # # Oscillation Prevention Parameters
  # oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)

# Added manually
TebLocalPlannerROS:

 odom_topic: /odom
 map_frame: map

 # Trajectory

 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.03
 global_plan_overwrite_orientation: True
 max_global_plan_lookahead_dist: 3.0
 feasibility_check_no_poses: 3
# global_plan_viapoint_sep: -1
# via_points_ordered: true

 # Robot

 max_vel_x: 0.1
 max_vel_x_backwards: 0.1
 max_vel_theta: 3
 acc_lim_x: 0.03
 acc_lim_theta: 0.5
 min_turning_radius: 0
 wheelbase: 0.1
 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
   type: "circular"
   radius: 0.02 # for type "circular"
   line_start: [-0.3, 0.0] # for type "line"
   line_end: [0.3, 0.0] # for type "line"
   front_offset: 0.2 # for type "two_circles"
   front_radius: 0.2 # for type "two_circles"
   rear_offset: 0.2 # for type "two_circles"
   rear_radius: 0.2 # for type "two_circles"
   vertices: [ [0.25, -0.05], [0.18, -0.05], [0.18, -0.18], [-0.19, -0.18], [-0.25, 0], [-0.19, 0.18], [0.18, 0.18], [0.18, 0.05], [0.25, 0.05] ] # for type "polygon"

 # GoalTolerance

 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 0.2
 free_goal_vel: False

 # Obstacles

 min_obstacle_dist: 0.04
 inflation_dist: 0.07
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 0.5
 obstacle_poses_affected: 30
 # costmap_converter_plugin: "costmap_converter::CostmapToDynamicObstacles"
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5
 include_dynamic_obstacles: False

 # Optimization

 no_inner_iterations: 4
 no_outer_iterations: 3
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 2
 weight_max_vel_theta: 2
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 100 # Was 1
 weight_kinematics_turning_radius: 50
 weight_optimaltime: 1
 weight_obstacle: 500
 weight_dynamic_obstacle: 10 # not in use yet
 alternative_time_cost: False # not in use yet
 viapoint: 1

 # Homotopy Class Planner

 enable_homotopy_class_planning: False
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False
# selection_viapoint_cost_scale: 1.0
 viapoints_all_candidates: True


#
# MpcLocalPlannerROS:
#
#   odom_topic: /odom
#   map_frame: /map
#
#    ## Robot settings
#   robot:
#     type: "simple_car"
#     simple_car:
#       wheelbase: 0.1
#       front_wheel_driving: True
#       max_vel_x: 0.2
#       max_vel_x_backwards: 0.1
#       max_steering_angle: 1.5 #0.7854
#       acc_lim_x: 0 # deactive bounds with zero
#       dec_lim_x: 0 # deactive bounds with zero
#       max_steering_rate: 0 # deactive bounds with zero
#
#   ## Footprint model for collision avoidance
#   footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
#     type: "circular"
#     radius: 0.005 # for type "circular"
#     line_start: [0.0, 0.0] # for type "line"
#     line_end: [0.4, 0.0] # for type "line"
#     front_offset: 0.2 # for type "two_circles"
#     front_radius: 0.2 # for type "two_circles"
#     rear_offset: 0.2 # for type "two_circles"
#     rear_radius: 0.2 # for type "two_circles"
#     vertices: [ [0.25, -0.05], [0.18, -0.05], [0.18, -0.18], [-0.19, -0.18], [-0.25, 0], [-0.19, 0.18], [0.18, 0.18], [0.18, 0.05], [0.25, 0.05] ] # for type "polygon"
#     is_footprint_dynamic: False
#
#
#   ## Collision avoidance
#   collision_avoidance:
#     min_obstacle_dist: 0.001 # Note, this parameter must be chosen w.r.t. the footprint_model
#     enable_dynamic_obstacles: True
#     force_inclusion_dist: 0.003
#     cutoff_dist: 2.5
#     include_costmap_obstacles: False
#     costmap_obstacles_behind_robot_dist: 1.0
#     collision_check_no_poses: 5
#
#
#   ## Planning grid
#   grid:
#     type: "fd_grid"
#     grid_size_ref: 20
#     dt_ref: 0.3
#     xf_fixed: [True, True, True]
#     warm_start: True
#     collocation_method: "forward_differences"
#     cost_integration_method: "left_sum"
#     variable_grid:
#       enable: True
#       min_dt: 0.0;
#       max_dt: 10.0;
#       grid_adaptation:
#         enable: True
#         dt_hyst_ratio: 0.1
#         min_grid_size: 2
#         max_grid_size: 50
#
#   ## Planning options
#   planning:
#     objective:
#       type: "minimum_time" # minimum_time requires grid/variable_grid/enable=True and grid/xf_fixed set properly
#     terminal_cost:
#       type: "none"
#     terminal_constraint:
#       type: "none"
#
#   ## Controller options
#   controller:
#     outer_ocp_iterations: 1
#     xy_goal_tolerance: 0.2
#     yaw_goal_tolerance: 0.2
#     global_plan_overwrite_orientation: True
#     global_plan_prune_distance: 1.0
#     allow_init_with_backward_motion: True
#     max_global_plan_lookahead_dist: 1.5
#     force_reinit_new_goal_dist: 1.0
#     force_reinit_new_goal_angular: 1.57
#     prefer_x_feedback: False
#     publish_ocp_results: False
#
#   ## Solver settings
#   solver:
#     type: "ipopt"
#     ipopt:
#       iterations: 100
#       max_cpu_time: -1.0
#       ipopt_numeric_options:
#         tol: 1e-4
#       ipopt_string_options:
#         linear_solver: "mumps"
#         hessian_approximation: "limited-memory" # exact/limited-memory, WARN 'exact' does currently not work well with the carlike model
#     lsq_lm:
#       iterations: 10
#       weight_init_eq: 2
#       weight_init_ineq: 2
#       weight_init_bounds: 2
#       weight_adapt_factor_eq: 1.5
#       weight_adapt_factor_ineq: 1.5
#       weight_adapt_factor_bounds: 1.5
#       weight_adapt_max_eq: 500
#       weight_adapt_max_ineq: 500
#       weight_adapt_max_bounds: 500

MpcLocalPlannerROS:
 ## Robot settings
 robot:
   type: "simple_car"
   unicycle:
     max_vel_x: 0.5
     max_vel_x_backwards: 0.2
     max_vel_theta: 0.3
     acc_lim_x: 0.7 # deactive bounds with zero
     dec_lim_x: 0.7 # deactive bounds with zero
     acc_lim_theta: 3 # deactivate bounds with zero
   simple_car:
     wheelbase: 0.2
     front_wheel_driving: False
     max_vel_x: 0.18
     max_vel_x_backwards: 0.1
     max_steering_angle: 0.521 #1.5 # For equivalent turn radius
     acc_lim_x: 0.7 # deactive bounds with zero
     dec_lim_x: 0.7 # deactive bounds with zero
     max_steering_rate: 0.5 # deactive bounds with zero
   kinematic_bicycle_vel_input:
     length_rear: 0.03
     length_front: 0.03
     max_vel_x: 0.2
     max_vel_x_backwards: 0.1
     max_steering_angle: 1.5   #0.785
     acc_lim_x: 0.03 # deactive bounds with zero
     dec_lim_x: 0.03 # deactive bounds with zero
     max_steering_rate: 0 # deactive bounds with zero

 ## Footprint model for collision avoidance
 footprint_model:
   type: "circular"
   radius: 0.2 # for type "circular"

 collision_avoidance:
   min_obstacle_dist: 0.2 # Note, this parameter must be chosen w.r.t. the footprint_model
   enable_dynamic_obstacles: True
   force_inclusion_dist: 0.5
   cutoff_dist: 2.5
   collision_check_no_poses: 5
   #include_costmap_obstacles: False

 ## Planning grid
 grid:
   type: "fd_grid"
   grid_size_ref: 20 #20
   dt_ref: 0.3 #0.3
   xf_fixed: [True, True, True] # E.g., set last one to False in order to unfix the final orientation
   warm_start: True
   collocation_method: "forward_differences"
   cost_integration_method: "left_sum"
   variable_grid:
     enable: True
     min_dt: 0.0;
     max_dt: 10.0;
     grid_adaptation:
       enable: True
       dt_hyst_ratio: 0.1
       min_grid_size: 2 #2
       max_grid_size: 50 #50


 # ## Planning options
 planning:
   objective:
     type: "minimum_time" # minimum_time requires grid/variable_grid/enable=True and grid/xf_fixed set properly
     quadratic_form:
       state_weights: [2.0, 2.0, 2.0]
       control_weights: [1.0, 1.0]
       integral_form: False
       hybrid_cost_minimum_time: False
     minimum_time_via_points:
       position_weight: 8.0
       orientation_weight: 0.0
       via_points_ordered: False
   terminal_cost:
     type: "quadratic" # can be "none"
     quadratic:
       final_state_weights: [2.0, 2.0, 2.0]
   terminal_constraint:
     type: "none" # can be "none"
     l2_ball:
       weight_matrix: [1.0, 1.0, 1.0]
       radius: 5


  ## Planning options
  # planning:
  #   objective:
  #     type: "minimum_time" # minimum_time requires grid/variable_grid/enable=True and grid/xf_fixed set properly
  #   terminal_cost:
  #     type: "none"
  #   terminal_constraint:
  #     type: "none"

 # Controller options
 controller:
   outer_ocp_iterations: 1
   xy_goal_tolerance: 0.4
   yaw_goal_tolerance: 0.2
   force_reinit_new_goal_dist: 1.0
   force_reinit_new_goal_angular: 1.57
   force_reinit_num_steps: 0
   global_plan_overwrite_orientation: True
   global_plan_viapoint_sep: -1
   allow_init_with_backward_motion: True
   publish_ocp_results: True
   print_cpu_time: False

   ## Controller options
  # controller:
  #   outer_ocp_iterations: 1
  #   xy_goal_tolerance: 0.2
  #   yaw_goal_tolerance: 0.1
  #   global_plan_overwrite_orientation: True
  #   global_plan_prune_distance: 1.0
  #   allow_init_with_backward_motion: True
  #   max_global_plan_lookahead_dist: 1.5
  #   force_reinit_new_goal_dist: 1.0
  #   force_reinit_new_goal_angular: 1.57
  #   prefer_x_feedback: False
  #   publish_ocp_results: False

 ## Solver settings
 solver:
   type: "ipopt"
   ipopt:
     iterations: 100
     max_cpu_time: -1.0
     ipopt_numeric_options:
       tol: 1e-4
     ipopt_string_options:
       linear_solver: "mumps"
       hessian_approximation: "limited-memory" # exact or limited-memory
     ipopt_integer_options:
       print_level: 2
   lsq_lm:
     iterations: 10
     weight_init_eq: 2
     weight_init_ineq: 2
     weight_init_bounds: 2
     weight_adapt_factor_eq: 1.5
     weight_adapt_factor_ineq: 1.5
     weight_adapt_factor_bounds: 1.5
     weight_adapt_max_eq: 500
     weight_adapt_max_ineq: 500
     weight_adapt_max_bounds: 500
